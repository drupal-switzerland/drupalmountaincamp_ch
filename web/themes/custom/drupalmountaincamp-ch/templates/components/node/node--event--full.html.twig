{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'mx-auto',
    'container',
    'p-page-gutter',
    'py-8',
  ]
%}

<article{{ attributes.addClass(classes) }}>
  <div class="relative">
    {% if content.field_image|render|trim is not empty %}
      {{ content.field_image }}
    {% else %}
      <article class="contextual-region media media--type-image media--view-mode-responsive-rectangular">
        <div class="field field--name-field-media-image field--type-image field--label-hidden mx-auto field__item">
          <img src="/themes/custom/drupal_celebrations/images/balloons.jpg" alt="Balloons" class="transition duration-150 ease-in-out transform">
        </div>
      </article>
    {% endif %}
  </div>
  <div class="relative mt-8 mx-auto">
    <div class="bg-white">
      {% if label %}
      {{ title_prefix }}
        {% if page %}
          <header class="node__header">
            <h1 class="page-title md:text-4xl sm:text-2xl text-xl">
              {{ label }}
            </h1>
          </header>
        {% else %}
        <h4{{ title_attributes.addClass('mt-1 font-semibold text-lg leading-tight') }}>
          <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h4>
        {% endif %}
        {{ title_suffix }}
      {% endif %}
      <div class="mt-2 text-gray-700 text-base">
        {{ content.field_event_time }}
        {{ content.field_event_end_time }}
      </div>
      <div class="mt-4 text-gray-700 text-base">
        {{ content | without('field_image', 'field_event_time', 'field_event_end_time') }}
      </div>
    </div>
    {% if display_submitted and author_card %}
      <footer class="node__meta mb-4">
        {{ author_card }}
      </footer>
    {% endif %}
</article>
