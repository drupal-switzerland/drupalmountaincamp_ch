<?php

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_block().
 */
function drupalmountaincamp_ch_preprocess_block(&$variables) {
  $variables['title_attributes']['class'][] = 'block__title';
  // Add a class indicating the custom block bundle.
  if (isset($variables['elements']['content']['#block_content'])) {
    $variables['attributes']['class'][] = Html::getClass('block-type-' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 */
function drupalmountaincamp_ch_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function drupalmountaincamp_ch_preprocess_html(&$variables) {
  // Use debug theming only if development mode of twig is enabled.
  $container = \Drupal::getContainer();
  $twig_config = $container->hasParameter('twig.config') ? $container->getParameter('twig.config'): [];
  if (\Drupal::request()->getHost() !== 'localhost' && isset($twig_config['debug']) && $twig_config['debug']) {
    $variables['attributes']['class'][] = 'debug';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form element templates.
 */
function drupalmountaincamp_ch_theme_suggestions_user_alter(array &$suggestions, array $variables, $hook) {
  // Define the view mode.
  $mode = $variables['elements']['#view_mode'];

  // Create a theme hook suggestion which has the view mode name in it.
  $suggestions[] = 'user__' . $mode;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form element templates.
 */
function drupalmountaincamp_ch_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (isset($variables["element"]["#name"])) {
    // Drupal executes theme suggestion for every element from multivalue field,
    // so name looks like field_name[0][value]. We need only field_name part
    // of it.
    $name = explode("[" , $variables["element"]["#name"], 2);
    $suggestions[] = $variables["theme_hook_original"] . "__" . $name[0];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form element templates.
 */
function drupalmountaincamp_ch_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = $variables["theme_hook_original"] . "__" . $variables['element']['#form_id'];
  }

  if (isset($variables["element"]["#name"])) {
    // Drupal executes theme suggestion for every element from multivalue field,
    // so name looks like field_name[0][value]. We need only field_name part
    // of it.
    $name = explode("[" , $variables["element"]["#name"], 2);
    $suggestions[] = $variables["theme_hook_original"] . "__" . $name[0];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function drupalmountaincamp_ch_preprocess_views_view_unformatted(&$variables) {
  if (array_key_exists('view', $variables)) {
    /** @var \Drupal\views\ViewExecutable $view */
    $view = $variables['view'];
    $variables['view_id'] = $view->id();
    $variables['view_display_id'] = $view->current_display;
  }
}
